@import "../../globalStyles/partials/variables.scss";

.work_element {
    position: relative;
    display: grid;
    grid-template-columns: 2fr 6fr;
    column-gap: 30px;
    padding: 60px 0;
    // margin: 60px 0;
    h3,
    h4,
    h5 {
        margin: 10px 0;
    }
    h4 {
        // font-size: 24px;
    }
    h6 {
        margin: 0;
        font-size: 18px;
        color: $lightPurple;
    }
}
$lineColor: white;

%separatorStyle{
    position: absolute;
    background-color: $lineColor;
    bottom: 0;
    left: 45%;
    height: 2px;
    transform: translate(-50%, -50%);
    transition: .5s;
}
.start_work_separator {
    width: 0%;
    @extend %separatorStyle;
    .bracket {
        &:after {
            transform: rotate(0deg);
        }
        &:before {
            transform: rotate(0deg);
        }
        &.right_bracket {
            right: -50px;
            top: 50%;
            transform: rotate(180deg);
            transform-origin: 0px 1px;
        }
    }
}
.work_separator {
    width: 60%;
    @extend %separatorStyle;
    .dot {
        position: absolute;
        top: 50%;
        transform: translate(-50%, -50%);
        background-color: $lineColor;
        border-radius: 15px;
        width: 5px;
        height: 5px;
        &.left_dot {
            left: -15px;
        }
        &.right_dot {
            right: -20px;
        }
    }
    .bracket {
        position: absolute;
        top: 50%;
        background-color: $lineColor;
        transition: 1s all;
        &::after,
        &::before {
            content: " ";
            transition: 1s all;
            position: absolute;
            width: 20px;
            height: 2px;
            background-color: $lineColor;
            border-radius: 5px;
            transform-origin: 0 0;
            animation-duration: 1s;
        }
        &:after {
            animation-name: bracketAnimAfter;
            transform: rotate(-35deg);
        }
        &:before {
            animation-name: bracketAnimBefore;
            transform: rotate(35deg);
        }
        &.left_bracket {
            left: -50px;
        }
        &.right_bracket {
            right: -50px;
            top: 50%;
            transform: rotate(180deg);
            transform-origin: 0px 1px;
        }
    }
}

@keyframes bracketAnimBefore{
    0% {
        height: 0;
        width: 0;
        transform: rotate(0deg);
    }
    50% {
        height: 2px;
        width: 20px;
        transform: rotate(0deg);
    }
    100% {
        height: 2px;
        width: 20px;

        transform: rotate(35deg);
    }
}
@keyframes bracketAnimAfter {
    0% {
        height: 0;
        width: 0;
        transform: rotate(0deg);
    }
    50% {
        height: 2px;
        width: 20px;
        transform: rotate(0deg);
    }
    100% {
        height: 2px;
        width: 20px;
        transform: rotate(-35deg);
    }
}


article:last-of-type {
    .work_separator {
        display: none;
    }
}

.tech_stack_list {
    display: flex;
    gap: 10px 15px;
    justify-content: flex-start;
    flex-wrap: wrap;
    padding: 0;
    li {
        list-style: none;
        color: $techElementsColor;
        font-size: 14px;
    }
}
.resposibilities_list {
    li {
        color: $techElementsColor;
        line-height: 160%;
    }
}
